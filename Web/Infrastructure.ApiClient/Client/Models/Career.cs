// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace UCR.ECCI.IS.TECH_EVALUATION_1.Infrastructure.ApiClient.Client.Models {
    public class Career : IParsable 
    {
        /// <summary>The acronym property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public UCR.ECCI.IS.TECH_EVALUATION_1.Infrastructure.ApiClient.Client.Models.Acronym? Acronym { get; set; }
#nullable restore
#else
        public UCR.ECCI.IS.TECH_EVALUATION_1.Infrastructure.ApiClient.Client.Models.Acronym Acronym { get; set; }
#endif
        /// <summary>The contents property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<UCR.ECCI.IS.TECH_EVALUATION_1.Infrastructure.ApiClient.Client.Models.Contents>? Contents { get; set; }
#nullable restore
#else
        public List<UCR.ECCI.IS.TECH_EVALUATION_1.Infrastructure.ApiClient.Client.Models.Contents> Contents { get; set; }
#endif
        /// <summary>The description property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public LongName? Description { get; set; }
#nullable restore
#else
        public LongName Description { get; set; }
#endif
        /// <summary>The duration property</summary>
        public int? Duration { get; set; }
        /// <summary>The isECCI property</summary>
        public bool? IsECCI { get; set; }
        /// <summary>The isSteamRelated property</summary>
        public bool? IsSteamRelated { get; set; }
        /// <summary>The name property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public LongName? Name { get; set; }
#nullable restore
#else
        public LongName Name { get; set; }
#endif
        /// <summary>The percentageFemaleStudents property</summary>
        public double? PercentageFemaleStudents { get; set; }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="Career"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static Career CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new Career();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                {"acronym", n => { Acronym = n.GetObjectValue<UCR.ECCI.IS.TECH_EVALUATION_1.Infrastructure.ApiClient.Client.Models.Acronym>(UCR.ECCI.IS.TECH_EVALUATION_1.Infrastructure.ApiClient.Client.Models.Acronym.CreateFromDiscriminatorValue); } },
                {"contents", n => { Contents = n.GetCollectionOfObjectValues<UCR.ECCI.IS.TECH_EVALUATION_1.Infrastructure.ApiClient.Client.Models.Contents>(UCR.ECCI.IS.TECH_EVALUATION_1.Infrastructure.ApiClient.Client.Models.Contents.CreateFromDiscriminatorValue)?.ToList(); } },
                {"description", n => { Description = n.GetObjectValue<LongName>(LongName.CreateFromDiscriminatorValue); } },
                {"duration", n => { Duration = n.GetIntValue(); } },
                {"isECCI", n => { IsECCI = n.GetBoolValue(); } },
                {"isSteamRelated", n => { IsSteamRelated = n.GetBoolValue(); } },
                {"name", n => { Name = n.GetObjectValue<LongName>(LongName.CreateFromDiscriminatorValue); } },
                {"percentageFemaleStudents", n => { PercentageFemaleStudents = n.GetDoubleValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<UCR.ECCI.IS.TECH_EVALUATION_1.Infrastructure.ApiClient.Client.Models.Acronym>("acronym", Acronym);
            writer.WriteCollectionOfObjectValues<UCR.ECCI.IS.TECH_EVALUATION_1.Infrastructure.ApiClient.Client.Models.Contents>("contents", Contents);
            writer.WriteObjectValue<LongName>("description", Description);
            writer.WriteIntValue("duration", Duration);
            writer.WriteBoolValue("isECCI", IsECCI);
            writer.WriteBoolValue("isSteamRelated", IsSteamRelated);
            writer.WriteObjectValue<LongName>("name", Name);
            writer.WriteDoubleValue("percentageFemaleStudents", PercentageFemaleStudents);
        }
    }
}
