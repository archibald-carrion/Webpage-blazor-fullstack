// <auto-generated/>
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions;
using Microsoft.Kiota.Serialization.Form;
using Microsoft.Kiota.Serialization.Json;
using Microsoft.Kiota.Serialization.Multipart;
using Microsoft.Kiota.Serialization.Text;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Threading.Tasks;
using System;
using UCR.ECCI.IS.TECH_EVALUATION_1.Infrastructure.ApiClient.Client.CreateCareer;
using UCR.ECCI.IS.TECH_EVALUATION_1.Infrastructure.ApiClient.Client.CreateContent;
using UCR.ECCI.IS.TECH_EVALUATION_1.Infrastructure.ApiClient.Client.DeleteContent;
using UCR.ECCI.IS.TECH_EVALUATION_1.Infrastructure.ApiClient.Client.GetSchoolarshipBudget;
using UCR.ECCI.IS.TECH_EVALUATION_1.Infrastructure.ApiClient.Client.ListCareer;
using UCR.ECCI.IS.TECH_EVALUATION_1.Infrastructure.ApiClient.Client.ListContents;
using UCR.ECCI.IS.TECH_EVALUATION_1.Infrastructure.ApiClient.Client.ModifyContent;
using UCR.ECCI.IS.TECH_EVALUATION_1.Infrastructure.ApiClient.Client.Weatherforecast;
namespace UCR.ECCI.IS.TECH_EVALUATION_1.Infrastructure.ApiClient.Client {
    /// <summary>
    /// The main entry point of the SDK, exposes the configuration and the fluent API.
    /// </summary>
    public class ApiClientKiota : BaseRequestBuilder 
    {
        /// <summary>The CreateCareer property</summary>
        public CreateCareerRequestBuilder CreateCareer
        {
            get => new CreateCareerRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The CreateContent property</summary>
        public CreateContentRequestBuilder CreateContent
        {
            get => new CreateContentRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The DeleteContent property</summary>
        public DeleteContentRequestBuilder DeleteContent
        {
            get => new DeleteContentRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The GetSchoolarshipBudget property</summary>
        public GetSchoolarshipBudgetRequestBuilder GetSchoolarshipBudget
        {
            get => new GetSchoolarshipBudgetRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The listCareer property</summary>
        public ListCareerRequestBuilder ListCareer
        {
            get => new ListCareerRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The listContents property</summary>
        public ListContentsRequestBuilder ListContents
        {
            get => new ListContentsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The ModifyContent property</summary>
        public ModifyContentRequestBuilder ModifyContent
        {
            get => new ModifyContentRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The weatherforecast property</summary>
        public WeatherforecastRequestBuilder Weatherforecast
        {
            get => new WeatherforecastRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>
        /// Instantiates a new <see cref="ApiClientKiota"/> and sets the default values.
        /// </summary>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public ApiClientKiota(IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}", new Dictionary<string, object>())
        {
            ApiClientBuilder.RegisterDefaultSerializer<JsonSerializationWriterFactory>();
            ApiClientBuilder.RegisterDefaultSerializer<TextSerializationWriterFactory>();
            ApiClientBuilder.RegisterDefaultSerializer<FormSerializationWriterFactory>();
            ApiClientBuilder.RegisterDefaultSerializer<MultipartSerializationWriterFactory>();
            ApiClientBuilder.RegisterDefaultDeserializer<JsonParseNodeFactory>();
            ApiClientBuilder.RegisterDefaultDeserializer<TextParseNodeFactory>();
            ApiClientBuilder.RegisterDefaultDeserializer<FormParseNodeFactory>();
        }
    }
}
